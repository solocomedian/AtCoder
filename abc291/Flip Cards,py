# １枚目のみを考えた場合は条件を満たすのは裏返す・裏返さないの2通り
#  2枚目までを考えた場合は条件を満たすのは1枚目の通りにそれぞれ裏返す・裏返さなかった場合に
# 条件を満たすかどうかで決まる
# 3枚目までも同様に2枚目までの通りに対して3枚目が裏返す・裏返さないときに条件を満たすどうかで決まる
# このようにN枚目までの条件を満たす裏返し方はN-1枚目までの裏返し方とN枚目の値に依存する
# 再帰的に繰り返し処理を行う
MOD=998244353
n = int(input())
data=[tuple(map(int,input().split())) for _ in range(n)] #追加や削除はないのでタプルを用いる
dp = [[0,0] for i in range(n)] # dp[i,flag] = i枚目までのカードまでの表裏の決め方のうち
                               # 条件を満たし、i枚目のカードがflag(これはカードの表裏を表す)であるような数

dp[0] = [1,1] # これは０枚目までのカードで条件を満たす表裏の決め方のうちで
              #１番目の要素が０枚目のカードが表の場合,2番目の要素が裏の場合を表す
for i in range(1,n):
    for pre in range(2):
        for nxt in range(2):
            if data[i-1][pre] != data[i][nxt]:
                dp[i][nxt] += dp[i-1][pre]

    dp[i][0]%=MOD
    dp[i][1]%=MOD

print((dp[n-1][0]+dp[n-1][1])%MOD)


